name: Java CI

on:
  push:
    branches: [ "1.20" ]
  pull_request:
    branches: [ "1.20" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: chmod +x ./gradlew
      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - name: Tool chain check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: javaToolchains
      - name: Check build environments
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :buildEnvironment :forge:buildEnvironment :fabric:buildEnvironment
      - name: Check changelog
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkChangelog
      - name: Generate Jar
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :fabric:remapJar :forge:remapJar
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: FluidTank2-${{ github.run_number }}
          path: "*/build/libs/*.jar"
          if-no-files-found: error
          retention-days: 7

  common-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      FORGE_ONLY: true
      FABRIC_ONLY: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: chmod +x ./gradlew
      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - name: Common JUnit
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :common:test

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        platform: [ forge, fabric ]
    env:
      FORGE_ONLY: ${{ matrix.platform == 'forge' }}
      FABRIC_ONLY: ${{ matrix.platform == 'fabric' }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: chmod +x ./gradlew
      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - name: ${{ matrix.platform }} JUnit
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :${{ matrix.platform }}:test
      - name: ${{ matrix.platform }} GameTest
        uses: gradle/gradle-build-action@v2
        env:
          RUN_GAME_TEST: true
        with:
          arguments: :${{ matrix.platform }}:runGameTest

  forge-data-gen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: chmod +x ./gradlew
      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - name: Compile test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :forge:genDataClasses
      - name: Forge DataGen
        uses: gradle/gradle-build-action@v2
        timeout-minutes: 5
        env:
          RUN_DATA_GEN: true
        with:
          arguments: :forge:runData
      - name: Check updated files
        run: git status
