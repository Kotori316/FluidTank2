plugins {
    id("com.kotori316.common")
    id("com.kotori316.publish")
    id("com.kotori316.subprojects")
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

sourceSets {
    create("gameTest") {
        scala { SourceDirectorySet set ->
            set.srcDir("src/gameTest/scala")
        }
        resources { SourceDirectorySet set ->
            set.srcDir("src/gameTest/resources")
        }
    }
}

loom {
    neoForge {
        // useForgeLoggerConfig = true
    }

    runs {
        client {
            configName = "Client"
            property("forge.enabledGameTestNamespaces", "fluidtank")
            runDir = "run"
            mods {
                create("main") {
                    sourceSet("main")
                }
                create("gameTest") {
                    sourceSet("gameTest")
                }
            }
        }
        server {
            configName = "Server"
            runDir = "run-server"
        }
        gameTest {
            configName = "GameTest"
            environment("gameTestServer")
            forgeTemplate("gameTestServer")
            vmArg("-ea")
            property("fabric.dli.env", "gameTestServer")
            property("forge.enabledGameTestNamespaces", "fluidtank")
            runDir = "game-test"
            mods {
                create("main") {
                    sourceSet("main")
                }
                create("gameTest") {
                    sourceSet("gameTest")
                }
            }
        }
    }
}

configurations {
    developmentNeoForge.extendsFrom common
    gameTestCompileClasspath.extendsFrom(testCompileClasspath)
    gameTestRuntimeClasspath.extendsFrom(testRuntimeClasspath)
}

dependencies {
    neoForge("net.neoforged:neoforge:${project.neoforge_version}")

    runtimeOnly(group: "com.kotori316", name: "ScalableCatsForce-NeoForge".toLowerCase(Locale.ROOT), version: project.slpVersion, classifier: "with-library") {
        transitive(false)
    }

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }

    modImplementation(group: "curse.maven", name: "jade-324717", version: project.property("jade_neoforge_id"))
    // Test Dependencies.
    // Required these libraries to execute the tests.
    // The library will avoid errors of ForgeRegistry and Capability.
    modImplementation(group: "com.kotori316", name: "test_utility_neo", version: project.testUtilNeoVersion)
    testImplementation(group: "org.mockito", name: "mockito-core", version: project.mockitoCoreVersion)
    testImplementation(group: "org.mockito", name: "mockito-inline", version: project.mockitoInlineVersion)
    forgeRuntimeLibrary(platform(group: "org.junit", name: "junit-bom", version: project.jupiterVersion))
    forgeRuntimeLibrary("org.junit.jupiter:junit-jupiter")

    "gameTestImplementation"(sourceSets.main.output)
}

ext {
    changelogHeader = """\
        # Large Fluid Tank for neoforge
        
        | Dependency | Version |
        | -- | -- |
        | Minecraft | ${project.minecraft_version} |
        | NeoForge | ${project.neoforge_version} |
        | scalable-cats-force | ${project.slpVersion} |
        """.stripIndent()
}
