plugins {
    id("scala")
}

architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
}

compileScala {
    scalaCompileOptions.additionalParameters = []
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/generated/resources'
        }
    }
}

sourcesJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    implementation(group: 'org.scala-lang', name: 'scala-library', version: project.scala2_version)
    implementation(group: 'org.scala-lang', name: 'scala3-library_3', version: project.scala3_version)
    implementation(group: 'org.typelevel', name: "cats-core_3", version: project.cats_version)
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.maven_base_name + "-" + project.name + "-" + project.minecraft_version
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
