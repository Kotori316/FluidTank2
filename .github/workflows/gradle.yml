name: Java CI

on:
  push:
    branches: [ "1.21.2" ]
  pull_request:
    branches: [ "1.21.2" ]

permissions:
  contents: read

jobs:
  assemble:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - run: chmod +x ./gradlew
      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.event_name != 'push' }}
          add-job-summary: 'on-failure'
      - run: ./gradlew javaToolchains assemble publishToMavenLocal --scan
      - run: ./gradlew checkChangelog
      - run: ./gradlew checkReleaseVersion
      - run: ./gradlew publishMods
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: FluidTank2-${{ github.run_number }}
          path: "*/build/libs/*.jar"
          if-no-files-found: error
          retention-days: 7

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        platform:
          - common
          # - forge
          - fabric
          - neoforge
    env:
      DISABLE_FORGE: ${{ matrix.platform != 'forge' }}
      DISABLE_FABRIC: ${{ matrix.platform != 'fabric' }}
      DISABLE_NEOFORGE: ${{ matrix.platform != 'neoforge' }}
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - run: chmod +x ./gradlew
      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.event_name != 'push' }}
          add-job-summary: 'on-failure'
      - name: ${{ matrix.platform }} JUnit
        run: ./gradlew :${{ matrix.platform }}:${{ matrix.platform == 'neoforge' && 'testJunit' || 'test' }}
        env:
          RUN_JUNIT: true
      - name: Prepare Runs
        if: ${{ matrix.platform == 'forge' }}
        timeout-minutes: 5
        run: ./gradlew downloadAssets || ./gradlew downloadAssets || true
        env:
          RUN_GAME_TEST: true
      - name: ${{ matrix.platform }} DataGen
        if: ${{ matrix.platform != 'common' }}
        run: ./gradlew :${{ matrix.platform }}:runData
        timeout-minutes: 5
        env:
          TEST_UTILITY_LOG_ALL_DATA: true
          RUN_DATA_GEN: true
      - name: ${{ matrix.platform }} GameTest
        if: ${{ matrix.platform != 'common' }}
        timeout-minutes: 5
        run: ./gradlew :${{ matrix.platform }}:runGameTestServer
        env:
          TEST_UTILITY_LOG_ALL_TEST: true
          RUN_GAME_TEST: true
      - name: Check report
        run: |
          ! test -d "${{ matrix.platform }}/game-test/crash-reports"
      - name: Check updated files
        run: git status
      - name: Check diff
        run: git diff --exit-code -- ./${{ matrix.platform }}/src/generated

  common-data-gen:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DISABLE_FORGE: true
      DISABLE_FABRIC: true
      DISABLE_NEOFORGE: false
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - run: chmod +x ./gradlew
      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.event_name != 'push' }}
          add-job-summary: 'on-failure'
      - run: ./gradlew :neoforge:commonDataGenClasses
        env:
          TEST_UTILITY_LOG_ALL_DATA: true
          RUN_DATA_GEN: true
      - name: DataGen
        run: ./gradlew :neoforge:runCommonData
        timeout-minutes: 5
        env:
          TEST_UTILITY_LOG_ALL_DATA: true
          RUN_DATA_GEN: true
      - name: Check updated files
        run: git status
      - name: Check diff
        run: git diff --exit-code -- ./common/src/generated

  merge-checker:
    if: always()
    needs:
      - assemble
      - test
    uses: 'Kotori316/common-script/.github/workflows/merge-checker.yaml@main'
    with:
      needs: ${{ toJSON(needs) }}
